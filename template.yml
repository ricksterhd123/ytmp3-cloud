AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: ytmp3 cloud

Parameters:
  Ytmp3DownloaderDockerImageUri:
    Type: String
    Description: Docker Image URI for ytmp3-downloader lambda function

  Ytmp3StoreBucketName:
    Type: String
    Description: Name of ytmp3-store bucket (must be unique)

  Ytmp3DbName:
    Type: String
    Description: Name of ytmp3 db name
    Default: ytmp3-db

Resources:
  Ytmp3Db:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref Ytmp3DbName
      AttributeDefinitions:
        - AttributeName: "videoId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "videoId"
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: True
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  Ytmp3DownloaderQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "ytmp3-downloader-queue"
      VisibilityTimeout: 300

  Ytmp3DownloaderQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref Ytmp3DownloaderQueue
      PolicyDocument:
        Statement:
          - Action:
              - "SQS:*"
            Effect: "Allow"
            Resource: !GetAtt Ytmp3Downloader.Arn

  Ytmp3Store:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref Ytmp3StoreBucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: False
        BlockPublicPolicy: False
        IgnorePublicAcls: False
        RestrictPublicBuckets: False
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - "GET"
            AllowedOrigins:
              - "*"

  Ytmp3StorePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Ytmp3Store
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: Allow
            Resource: !Join
              - ""
              - - !GetAtt Ytmp3Store.Arn
                - "/*"
            Principal: "*"

  ffmpeg:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ytmp3-downloader-layer/
      CompatibleRuntimes:
        - python3.10
      Description: ffmpeg binary
      LayerName: ffmpeg
    Metadata:
      BuildMethod: makefile

  ffprobe:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ytmp3-downloader-layer/
      CompatibleRuntimes:
        - python3.10
      Description: ffprobe binary
      LayerName: ffprobe
    Metadata:
      BuildMethod: makefile

  Ytmp3DownloaderRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ytmp3-downloader-role-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "dynamodb:UpdateItem"
                Resource: !GetAtt Ytmp3Db.Arn
              - Effect: Allow
                Action: "s3:PutObject"
                Resource: !Join
                  - ""
                  - - !GetAtt Ytmp3Store.Arn
                    - "/*"
              - Effect: Allow
                Action:
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                Resource: !GetAtt Ytmp3DownloaderQueue.Arn
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  Ytmp3Downloader:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Zip
      CodeUri: ytmp3-downloader/
      Handler: main.handler
      Runtime: python3.10
      Timeout: 600
      MemorySize: 4096
      Role: !GetAtt Ytmp3DownloaderRole.Arn
      Layers:
        - !Ref ffmpeg
        - !Ref ffprobe
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            BatchSize: 1
            Queue: !GetAtt Ytmp3DownloaderQueue.Arn
      Environment:
        Variables:
          YTMP3_DB_NAME: !Ref Ytmp3DbName
          YTMP3_STORE_BUCKET_NAME: !Ref Ytmp3StoreBucketName
          YTMP3_DOWNLOADER_QUEUE_URL: !GetAtt Ytmp3DownloaderQueue.QueueUrl

  Ytmp3DispatcherRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ytmp3-downloader-role-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:DeleteItem"
                Resource: !GetAtt Ytmp3Db.Arn
              - Effect: Allow
                Action: "sqs:SendMessage"
                Resource: !GetAtt Ytmp3DownloaderQueue.Arn
              - Effect: Allow
                Action: 
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource:
                  - !GetAtt Ytmp3Store.Arn
                  - !Join
                    - ""
                    - - !GetAtt Ytmp3Store.Arn
                      - "/*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  Ytmp3Dispatcher:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Zip
      CodeUri: ytmp3-dispatcher/
      Handler: main.handler
      Runtime: python3.10
      Timeout: 300
      Role: !GetAtt Ytmp3DispatcherRole.Arn
      Environment:
        Variables:
          YTMP3_DB_NAME: !Ref Ytmp3DbName
          YTMP3_DOWNLOADER_QUEUE_URL: !GetAtt Ytmp3DownloaderQueue.QueueUrl
          YTMP3_STORE_BUCKET_NAME: !Ref Ytmp3StoreBucketName

  Ytmp3Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: Ytmp3CloudApi
      Description: REST API for ytmp3-cloud
      ProtocolType: HTTP
      CorsConfiguration:
        AllowHeaders: ["*"]
        AllowMethods: ["OPTIONS", "GET"]
        AllowOrigins: ["*"]
      Version: v1.0.0

  Ytmp3ApiDispatcherIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref Ytmp3Api
      Description: Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ""
        - - "arn:"
          - !Ref "AWS::Partition"
          - ":apigateway:"
          - !Ref "AWS::Region"
          - ":lambda:path/2015-03-31/functions/"
          - !GetAtt Ytmp3Dispatcher.Arn
          - "/invocations"
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"

  Ytmp3ApiDispatcherRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref Ytmp3Api
      RouteKey: "GET /mp3/{videoId}"
      Target: !Join
        - ""
        - - "integrations/"
          - !Ref Ytmp3ApiDispatcherIntegration

  Ytmp3ApiDefaultStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: $default
      ApiId: !Ref Ytmp3Api
      DefaultRouteSettings:
        ThrottlingBurstLimit: 50
        ThrottlingRateLimit: 100

  Deployment:
    Type: "AWS::ApiGatewayV2::Deployment"
    DependsOn:
      - Ytmp3ApiDispatcherRoute
    Properties:
      ApiId: !Ref Ytmp3Api
      StageName: $default

  Ytmp3ApiDispatcherPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Ytmp3Dispatcher.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:execute-api:"
          - !Ref "AWS::Region"
          - ":"
          - !Ref "AWS::AccountId"
          - ":"
          - !Ref Ytmp3Api
          - "/*/GET/mp3/*"

Outputs:
  Ytmp3ApiUrl:
    Description: URL of Ytmp3 REST API
    Value: !Join
      - ''
      - - "https://"
        - !Ref Ytmp3Api
        - ".execute-api."
        - !Ref "AWS::Region"
        - ".amazonaws.com"
  Ytmp3StoreUrl:
    Description: URL of Ytmp3 store S3 bucket
    Value: !Join
      - ''
      - - "https://"
        - !Ref Ytmp3Store
        - ".s3."
        - !Ref "AWS::Region"
        - ".amazonaws.com"
